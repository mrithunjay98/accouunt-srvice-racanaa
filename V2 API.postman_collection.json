{
	"info": {
		"_postman_id": "fa3b8e19-2162-41d7-b5e2-0903064b58a4",
		"name": "V2 API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26985769"
	},
	"item": [
		{
			"name": "Accounts",
			"item": [
				{
					"name": "1. Account",
					"item": [
						{
							"name": "List accounts",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{api.key.name}}",
										"value": "{{api.key.value}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{accounts.service.url}}/accounts?offset=1&limit=100",
									"host": [
										"{{accounts.service.url}}"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "offset",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "{\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"},{\"by\":\"type\",\"order\":\"desc\"}]}",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "List accounts",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/accounts?offset=1&limit=4&sortBy=dateUpdated&sortDir=desc",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"accounts"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "4"
												},
												{
													"key": "sortBy",
													"value": "dateUpdated"
												},
												{
													"key": "sortDir",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 20 Sep 2023 04:14:19 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"total\": 6,\n    \"offset\": 1,\n    \"limit\": 4,\n    \"data\": [\n        {\n            \"id\": \"402881888ab0c362018ab0c537490005\",\n            \"name\": \"Racanaa\",\n            \"agencyId\": null,\n            \"type\": \"ROOT\",\n            \"code\": null,\n            \"emailId\": \"support@racanaa.com\",\n            \"countryCode\": 91,\n            \"contactNumber\": 1234567890,\n            \"address\": \"Racanaa Energy, Evolve Work Studio, 2nd floor, Raj Pinnacle, Plot no. 7F Phase 1 6th Cross, Graphite India Main Rd, Whitefield, Doddanakundi Industrial Area 2, EPIP Zone, Bengaluru, Karnataka 560048\",\n            \"city\": \"Bangalore\",\n            \"district\": null,\n            \"state\": \"Karnataka\",\n            \"country\": \"India\",\n            \"pinCode\": 0,\n            \"domain\": \"racanaa.energy\",\n            \"createdBy\": null,\n            \"updatedBy\": null,\n            \"dateCreated\": \"2023-09-20T04:07:09.385+00:00\",\n            \"dateUpdated\": \"2023-09-20T04:07:09.385+00:00\"\n        },\n        {\n            \"id\": \"402881888ab0c362018ab0c5356a0004\",\n            \"name\": \"Racanaa\",\n            \"agencyId\": null,\n            \"type\": \"ROOT\",\n            \"code\": null,\n            \"emailId\": \"support@racanaa.com\",\n            \"countryCode\": 91,\n            \"contactNumber\": 1234567890,\n            \"address\": \"Racanaa Energy, Evolve Work Studio, 2nd floor, Raj Pinnacle, Plot no. 7F Phase 1 6th Cross, Graphite India Main Rd, Whitefield, Doddanakundi Industrial Area 2, EPIP Zone, Bengaluru, Karnataka 560048\",\n            \"city\": \"Bangalore\",\n            \"district\": null,\n            \"state\": \"Karnataka\",\n            \"country\": \"India\",\n            \"pinCode\": 0,\n            \"domain\": \"racanaa.energy\",\n            \"createdBy\": null,\n            \"updatedBy\": null,\n            \"dateCreated\": \"2023-09-20T04:07:08.905+00:00\",\n            \"dateUpdated\": \"2023-09-20T04:07:08.905+00:00\"\n        },\n        {\n            \"id\": \"402881888ab0c362018ab0c52c9a0003\",\n            \"name\": \"Racanaa\",\n            \"agencyId\": null,\n            \"type\": \"ROOT\",\n            \"code\": null,\n            \"emailId\": \"support@racanaa.com\",\n            \"countryCode\": 91,\n            \"contactNumber\": 1234567890,\n            \"address\": \"Racanaa Energy, Evolve Work Studio, 2nd floor, Raj Pinnacle, Plot no. 7F Phase 1 6th Cross, Graphite India Main Rd, Whitefield, Doddanakundi Industrial Area 2, EPIP Zone, Bengaluru, Karnataka 560048\",\n            \"city\": \"Bangalore\",\n            \"district\": null,\n            \"state\": \"Karnataka\",\n            \"country\": \"India\",\n            \"pinCode\": 0,\n            \"domain\": \"racanaa.energy\",\n            \"createdBy\": null,\n            \"updatedBy\": null,\n            \"dateCreated\": \"2023-09-20T04:07:06.650+00:00\",\n            \"dateUpdated\": \"2023-09-20T04:07:06.650+00:00\"\n        },\n        {\n            \"id\": \"402881888ab0c362018ab0c5274a0002\",\n            \"name\": \"Racanaa\",\n            \"agencyId\": null,\n            \"type\": \"ROOT\",\n            \"code\": null,\n            \"emailId\": \"support@racanaa.com\",\n            \"countryCode\": 91,\n            \"contactNumber\": 1234567890,\n            \"address\": \"Racanaa Energy, Evolve Work Studio, 2nd floor, Raj Pinnacle, Plot no. 7F Phase 1 6th Cross, Graphite India Main Rd, Whitefield, Doddanakundi Industrial Area 2, EPIP Zone, Bengaluru, Karnataka 560048\",\n            \"city\": \"Bangalore\",\n            \"district\": null,\n            \"state\": \"Karnataka\",\n            \"country\": \"India\",\n            \"pinCode\": 0,\n            \"domain\": \"racanaa.energy\",\n            \"createdBy\": null,\n            \"updatedBy\": null,\n            \"dateCreated\": \"2023-09-20T04:07:05.290+00:00\",\n            \"dateUpdated\": \"2023-09-20T04:07:05.290+00:00\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Search accounts",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{api.key.name}}",
										"value": "{{api.key.value}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{accounts.service.url}}/accounts/search?offset=1&limit=10&sort={\"criteria\":[{\"by\":\"dateUpdated\",\"order\":\"asc\"},{\"by\":\"type\",\"order\":\"desc\"}]}&search={\"dataOption\":\"any\",\"criteria\":[{\"filterKey\":\"name\",\"operation\":\"cn\",\"value\":\"naveen\"},{\"filterKey\":\"email\",\"operation\":\"cn\",\"value\":\"racanaa\"}]}",
									"host": [
										"{{accounts.service.url}}"
									],
									"path": [
										"accounts",
										"search"
									],
									"query": [
										{
											"key": "offset",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "sort",
											"value": "{\"criteria\":[{\"by\":\"dateUpdated\",\"order\":\"asc\"},{\"by\":\"type\",\"order\":\"desc\"}]}"
										},
										{
											"key": "search",
											"value": "{\"dataOption\":\"any\",\"criteria\":[{\"filterKey\":\"name\",\"operation\":\"cn\",\"value\":\"naveen\"},{\"filterKey\":\"email\",\"operation\":\"cn\",\"value\":\"racanaa\"}]}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Search by type",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{accounts.service.url}}/accounts/search?offset=1&limit=3&sort={\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"},{\"by\":\"type\",\"order\":\"desc\"}]}&search={\"dataOption\":\"any\",\"criteria\":[{\"filterKey\":\"type\",\"operation\":\"eq\",\"value\":\"CLIENT\"}]}",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"search"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "3"
												},
												{
													"key": "sort",
													"value": "{\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"},{\"by\":\"type\",\"order\":\"desc\"}]}"
												},
												{
													"key": "search",
													"value": "{\"dataOption\":\"any\",\"criteria\":[{\"filterKey\":\"type\",\"operation\":\"eq\",\"value\":\"CLIENT\"}]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 24 Sep 2023 12:14:11 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"total\": 2,\n    \"offset\": 1,\n    \"limit\": 3,\n    \"data\": [\n        {\n            \"id\": \"402881888ac3ce6b018ac3ce6f860003\",\n            \"name\": \"Beans Coffee\",\n            \"nameRegistered\": null,\n            \"code\": null,\n            \"type\": \"CLIENT\",\n            \"apiKey\": \"620285e0-835d-49f3-81b7-3c8b270bd7eb\",\n            \"email\": \"support@racanaa.com\",\n            \"emailMasked\": null,\n            \"countryCode\": \"+91\",\n            \"contact\": \"12333312121l\",\n            \"contactMasked\": 0,\n            \"addressLine1\": \"WhiteField\",\n            \"addressLine2\": null,\n            \"city\": null,\n            \"district\": \"Bangalore\",\n            \"state\": \"Karnataka\",\n            \"country\": \"India\",\n            \"pinCode\": \"560078\",\n            \"domain\": null,\n            \"tenantId\": \"402881888ac3ce6b018ac3ce6f840002\",\n            \"createdBy\": null,\n            \"updatedBy\": null,\n            \"dateCreated\": 1695502200715,\n            \"dateUpdated\": 1695502200715\n        },\n        {\n            \"id\": \"402881888ac3ce6b018ac3ce6f810001\",\n            \"name\": \"Evolve Studio\",\n            \"nameRegistered\": null,\n            \"code\": null,\n            \"type\": \"CLIENT\",\n            \"apiKey\": \"52c468ef-f739-49f1-ab2d-1c476f24472c\",\n            \"email\": \"support@racanaa.com\",\n            \"emailMasked\": null,\n            \"countryCode\": \"+91\",\n            \"contact\": \"12333312121l\",\n            \"contactMasked\": 0,\n            \"addressLine1\": \"WhiteField\",\n            \"addressLine2\": null,\n            \"city\": null,\n            \"district\": \"Bangalore\",\n            \"state\": \"Karnataka\",\n            \"country\": \"India\",\n            \"pinCode\": \"560078\",\n            \"domain\": null,\n            \"tenantId\": \"402881888ac3ce6b018ac3ce6f730000\",\n            \"createdBy\": null,\n            \"updatedBy\": null,\n            \"dateCreated\": 1695502200706,\n            \"dateUpdated\": 1695502200706\n        }\n    ],\n    \"search\": {\n        \"criteria\": [\n            {\n                \"filterKey\": \"type\",\n                \"value\": \"CLIENT\",\n                \"operation\": \"eq\",\n                \"dataOption\": \"any\"\n            }\n        ],\n        \"dataOption\": \"any\"\n    },\n    \"sort\": {\n        \"criteria\": [\n            {\n                \"by\": \"name\",\n                \"order\": \"asc\"\n            },\n            {\n                \"by\": \"type\",\n                \"order\": \"desc\"\n            }\n        ]\n    }\n}"
								},
								{
									"name": "Search by type AND name",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{accounts.service.url}}/accounts/search?offset=1&limit=3&sort={\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"},{\"by\":\"type\",\"order\":\"desc\"}]}&search={\"dataOption\":\"all\",\"criteria\":[{\"filterKey\":\"type\",\"operation\":\"eq\",\"value\":\"CLIENT\"},{\"filterKey\":\"name\",\"operation\":\"cn\",\"value\":\"Beans\"}]}",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"search"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "3"
												},
												{
													"key": "sort",
													"value": "{\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"},{\"by\":\"type\",\"order\":\"desc\"}]}"
												},
												{
													"key": "search",
													"value": "{\"dataOption\":\"all\",\"criteria\":[{\"filterKey\":\"type\",\"operation\":\"eq\",\"value\":\"CLIENT\"},{\"filterKey\":\"name\",\"operation\":\"cn\",\"value\":\"Beans\"}]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 24 Sep 2023 12:14:56 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"total\": 1,\n    \"offset\": 1,\n    \"limit\": 3,\n    \"data\": [\n        {\n            \"id\": \"402881888ac3ce6b018ac3ce6f860003\",\n            \"name\": \"Beans Coffee\",\n            \"nameRegistered\": null,\n            \"code\": null,\n            \"type\": \"CLIENT\",\n            \"apiKey\": \"620285e0-835d-49f3-81b7-3c8b270bd7eb\",\n            \"email\": \"support@racanaa.com\",\n            \"emailMasked\": null,\n            \"countryCode\": \"+91\",\n            \"contact\": \"12333312121l\",\n            \"contactMasked\": 0,\n            \"addressLine1\": \"WhiteField\",\n            \"addressLine2\": null,\n            \"city\": null,\n            \"district\": \"Bangalore\",\n            \"state\": \"Karnataka\",\n            \"country\": \"India\",\n            \"pinCode\": \"560078\",\n            \"domain\": null,\n            \"tenantId\": \"402881888ac3ce6b018ac3ce6f840002\",\n            \"createdBy\": null,\n            \"updatedBy\": null,\n            \"dateCreated\": 1695502200715,\n            \"dateUpdated\": 1695502200715\n        }\n    ],\n    \"search\": {\n        \"criteria\": [\n            {\n                \"filterKey\": \"type\",\n                \"value\": \"CLIENT\",\n                \"operation\": \"eq\",\n                \"dataOption\": \"all\"\n            },\n            {\n                \"filterKey\": \"name\",\n                \"value\": \"Beans\",\n                \"operation\": \"cn\",\n                \"dataOption\": \"all\"\n            }\n        ],\n        \"dataOption\": \"all\"\n    },\n    \"sort\": {\n        \"criteria\": [\n            {\n                \"by\": \"name\",\n                \"order\": \"asc\"\n            },\n            {\n                \"by\": \"type\",\n                \"order\": \"desc\"\n            }\n        ]\n    }\n}"
								},
								{
									"name": "Search by type OR name",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{accounts.service.url}}/accounts/search?offset=1&limit=3&sort={\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"},{\"by\":\"type\",\"order\":\"desc\"}]}&search={\"dataOption\":\"any\",\"criteria\":[{\"filterKey\":\"type\",\"operation\":\"eq\",\"value\":\"CLIENT\"},{\"filterKey\":\"name\",\"operation\":\"cn\",\"value\":\"Raca\"}]}",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"search"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "3"
												},
												{
													"key": "sort",
													"value": "{\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"},{\"by\":\"type\",\"order\":\"desc\"}]}"
												},
												{
													"key": "search",
													"value": "{\"dataOption\":\"any\",\"criteria\":[{\"filterKey\":\"type\",\"operation\":\"eq\",\"value\":\"CLIENT\"},{\"filterKey\":\"name\",\"operation\":\"cn\",\"value\":\"Raca\"}]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 24 Sep 2023 12:15:42 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"total\": 3,\n    \"offset\": 1,\n    \"limit\": 3,\n    \"data\": [\n        {\n            \"id\": \"402881888ac3ce6b018ac3ce6f860003\",\n            \"name\": \"Beans Coffee\",\n            \"nameRegistered\": null,\n            \"code\": null,\n            \"type\": \"CLIENT\",\n            \"apiKey\": \"620285e0-835d-49f3-81b7-3c8b270bd7eb\",\n            \"email\": \"support@racanaa.com\",\n            \"emailMasked\": null,\n            \"countryCode\": \"+91\",\n            \"contact\": \"12333312121l\",\n            \"contactMasked\": 0,\n            \"addressLine1\": \"WhiteField\",\n            \"addressLine2\": null,\n            \"city\": null,\n            \"district\": \"Bangalore\",\n            \"state\": \"Karnataka\",\n            \"country\": \"India\",\n            \"pinCode\": \"560078\",\n            \"domain\": null,\n            \"tenantId\": \"402881888ac3ce6b018ac3ce6f840002\",\n            \"createdBy\": null,\n            \"updatedBy\": null,\n            \"dateCreated\": 1695502200715,\n            \"dateUpdated\": 1695502200715\n        },\n        {\n            \"id\": \"402881888ac3ce6b018ac3ce6f810001\",\n            \"name\": \"Evolve Studio\",\n            \"nameRegistered\": null,\n            \"code\": null,\n            \"type\": \"CLIENT\",\n            \"apiKey\": \"52c468ef-f739-49f1-ab2d-1c476f24472c\",\n            \"email\": \"support@racanaa.com\",\n            \"emailMasked\": null,\n            \"countryCode\": \"+91\",\n            \"contact\": \"12333312121l\",\n            \"contactMasked\": 0,\n            \"addressLine1\": \"WhiteField\",\n            \"addressLine2\": null,\n            \"city\": null,\n            \"district\": \"Bangalore\",\n            \"state\": \"Karnataka\",\n            \"country\": \"India\",\n            \"pinCode\": \"560078\",\n            \"domain\": null,\n            \"tenantId\": \"402881888ac3ce6b018ac3ce6f730000\",\n            \"createdBy\": null,\n            \"updatedBy\": null,\n            \"dateCreated\": 1695502200706,\n            \"dateUpdated\": 1695502200706\n        },\n        {\n            \"id\": \"402881888ac3ce6b018ac3ce6f730000\",\n            \"name\": \"Racanaa\",\n            \"nameRegistered\": null,\n            \"code\": null,\n            \"type\": \"ROOT\",\n            \"apiKey\": \"6e399983-862e-4435-808a-4056ebc4f841\",\n            \"email\": \"support@racanaa.com\",\n            \"emailMasked\": null,\n            \"countryCode\": \"+91\",\n            \"contact\": \"12333312121l\",\n            \"contactMasked\": 0,\n            \"addressLine1\": \"WhiteField\",\n            \"addressLine2\": null,\n            \"city\": null,\n            \"district\": \"Bangalore\",\n            \"state\": \"Karnataka\",\n            \"country\": \"India\",\n            \"pinCode\": \"560078\",\n            \"domain\": null,\n            \"tenantId\": null,\n            \"createdBy\": null,\n            \"updatedBy\": null,\n            \"dateCreated\": 1695502200697,\n            \"dateUpdated\": 1695502200697\n        }\n    ],\n    \"search\": {\n        \"criteria\": [\n            {\n                \"filterKey\": \"type\",\n                \"value\": \"CLIENT\",\n                \"operation\": \"eq\",\n                \"dataOption\": \"any\"\n            },\n            {\n                \"filterKey\": \"name\",\n                \"value\": \"Raca\",\n                \"operation\": \"cn\",\n                \"dataOption\": \"any\"\n            }\n        ],\n        \"dataOption\": \"any\"\n    },\n    \"sort\": {\n        \"criteria\": [\n            {\n                \"by\": \"name\",\n                \"order\": \"asc\"\n            },\n            {\n                \"by\": \"type\",\n                \"order\": \"desc\"\n            }\n        ]\n    }\n}"
								},
								{
									"name": "Seach by type OR name CONTAINS",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{accounts.service.url}}/accounts/search?offset=1&limit=3&sort={\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"},{\"by\":\"type\",\"order\":\"desc\"}]}&search={\"dataOption\":\"any\",\"criteria\":[{\"filterKey\":\"email\",\"operation\":\"cn\",\"value\":\"rac\"},{\"filterKey\":\"name\",\"operation\":\"cn\",\"value\":\"rac\"}]}",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"search"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "3"
												},
												{
													"key": "sort",
													"value": "{\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"},{\"by\":\"type\",\"order\":\"desc\"}]}"
												},
												{
													"key": "search",
													"value": "{\"dataOption\":\"any\",\"criteria\":[{\"filterKey\":\"email\",\"operation\":\"cn\",\"value\":\"rac\"},{\"filterKey\":\"name\",\"operation\":\"cn\",\"value\":\"rac\"}]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 24 Sep 2023 12:19:31 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"total\": 4,\n    \"offset\": 1,\n    \"limit\": 3,\n    \"data\": [\n        {\n            \"id\": \"402881888ac3ce6b018ac3ce6f860003\",\n            \"name\": \"Beans Coffee\",\n            \"nameRegistered\": null,\n            \"code\": null,\n            \"type\": \"CLIENT\",\n            \"apiKey\": \"620285e0-835d-49f3-81b7-3c8b270bd7eb\",\n            \"email\": \"support@racanaa.com\",\n            \"emailMasked\": null,\n            \"countryCode\": \"+91\",\n            \"contact\": \"12333312121l\",\n            \"contactMasked\": 0,\n            \"addressLine1\": \"WhiteField\",\n            \"addressLine2\": null,\n            \"city\": null,\n            \"district\": \"Bangalore\",\n            \"state\": \"Karnataka\",\n            \"country\": \"India\",\n            \"pinCode\": \"560078\",\n            \"domain\": null,\n            \"tenantId\": \"402881888ac3ce6b018ac3ce6f840002\",\n            \"createdBy\": null,\n            \"updatedBy\": null,\n            \"dateCreated\": 1695502200715,\n            \"dateUpdated\": 1695502200715\n        },\n        {\n            \"id\": \"402881888ac3ce6b018ac3ce6f840002\",\n            \"name\": \"Carbon Happy\",\n            \"nameRegistered\": null,\n            \"code\": null,\n            \"type\": \"AGENCY\",\n            \"apiKey\": \"753306cc-45ea-44fa-9e86-3ae5822c42b4\",\n            \"email\": \"support@racanaa.com\",\n            \"emailMasked\": null,\n            \"countryCode\": \"+91\",\n            \"contact\": \"12333312121l\",\n            \"contactMasked\": 0,\n            \"addressLine1\": \"WhiteField\",\n            \"addressLine2\": null,\n            \"city\": null,\n            \"district\": \"Bangalore\",\n            \"state\": \"Karnataka\",\n            \"country\": \"India\",\n            \"pinCode\": \"560078\",\n            \"domain\": null,\n            \"tenantId\": \"402881888ac3ce6b018ac3ce6f730000\",\n            \"createdBy\": null,\n            \"updatedBy\": null,\n            \"dateCreated\": 1695502200709,\n            \"dateUpdated\": 1695502200709\n        },\n        {\n            \"id\": \"402881888ac3ce6b018ac3ce6f810001\",\n            \"name\": \"Evolve Studio\",\n            \"nameRegistered\": null,\n            \"code\": null,\n            \"type\": \"CLIENT\",\n            \"apiKey\": \"52c468ef-f739-49f1-ab2d-1c476f24472c\",\n            \"email\": \"support@racanaa.com\",\n            \"emailMasked\": null,\n            \"countryCode\": \"+91\",\n            \"contact\": \"12333312121l\",\n            \"contactMasked\": 0,\n            \"addressLine1\": \"WhiteField\",\n            \"addressLine2\": null,\n            \"city\": null,\n            \"district\": \"Bangalore\",\n            \"state\": \"Karnataka\",\n            \"country\": \"India\",\n            \"pinCode\": \"560078\",\n            \"domain\": null,\n            \"tenantId\": \"402881888ac3ce6b018ac3ce6f730000\",\n            \"createdBy\": null,\n            \"updatedBy\": null,\n            \"dateCreated\": 1695502200706,\n            \"dateUpdated\": 1695502200706\n        }\n    ],\n    \"search\": {\n        \"criteria\": [\n            {\n                \"filterKey\": \"email\",\n                \"value\": \"rac\",\n                \"operation\": \"cn\",\n                \"dataOption\": \"any\"\n            },\n            {\n                \"filterKey\": \"name\",\n                \"value\": \"rac\",\n                \"operation\": \"cn\",\n                \"dataOption\": \"any\"\n            }\n        ],\n        \"dataOption\": \"any\"\n    },\n    \"sort\": {\n        \"criteria\": [\n            {\n                \"by\": \"name\",\n                \"order\": \"asc\"\n            },\n            {\n                \"by\": \"type\",\n                \"order\": \"desc\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Create account",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "{{api.key.name}}",
										"value": "{{api.key.value}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Mano bb\",\n    \"address\": \"Racanaa Energy, Evolve Work Studio, 2nd floor, Raj Pinnacle, Plot no. 7F Phase 1 6th Cross, Graphite India Main Rd, Whitefield, Doddanakundi Industrial Area 2, EPIP Zone, Bengaluru, Karnataka 560048\",\n    \"city\": \"Bangalore\",\n    \"countryCode\":\"+91\",\n    \"contact\": \"919900900\",\n    \"country\": \"India\",\n    \"domain\": \"aasa.bb.int\",\n    \"email\": \"derwent@racanaa.com\",\n    \"pinCode\": 560000,\n    \"state\": \"Karnataka\",\n    \"type\": \"CLIENT\",\n    \"tenantId\": \"402881888abea2c2018abea2c5500000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{accounts.service.url}}/accounts",
									"host": [
										"{{accounts.service.url}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"response": [
								{
									"name": "Create account",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"New account\",\n    \"address\": \"Racanaa Energy, Evolve Work Studio, 2nd floor, Raj Pinnacle, Plot no. 7F Phase 1 6th Cross, Graphite India Main Rd, Whitefield, Doddanakundi Industrial Area 2, EPIP Zone, Bengaluru, Karnataka 560048\",\n    \"city\": \"Bangalore\",\n    \"countryCode\":\"+91\",\n    \"contact\": \"919900900\",\n    \"country\": \"India\",\n    \n    \"domain\": \"new.i.int\",\n    \"email\": \"m@racanaa.com\",\n    \"pinCode\": 560000,\n    \"state\": \"Karnataka\",\n    \"type\": \"CLIENT\",\n    \"tenantId\": \"402881888abea2c2018abea2c5500000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{accounts.service.url}}/accounts",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 24 Sep 2023 13:41:39 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"402881888ac76c56018ac76ca0c70000\",\n    \"name\": \"MNEGI\",\n    \"nameRegistered\": null,\n    \"code\": null,\n    \"type\": \"CLIENT\",\n    \"apiKey\": null,\n    \"email\": \"m@racanaa.com\",\n    \"emailMasked\": null,\n    \"countryCode\": \"+91\",\n    \"contact\": \"919900900\",\n    \"contactMasked\": 0,\n    \"addressLine1\": null,\n    \"addressLine2\": null,\n    \"city\": \"Bangalore\",\n    \"district\": null,\n    \"state\": \"Karnataka\",\n    \"country\": \"India\",\n    \"pinCode\": \"560000\",\n    \"domain\": \"mneg.i.int\",\n    \"tenantId\": null,\n    \"createdBy\": null,\n    \"updatedBy\": null,\n    \"dateCreated\": 1695562899661,\n    \"dateUpdated\": 1695562899661\n}"
								},
								{
									"name": "Create account - Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Racanaa\",\n    \"address\": \"Racanaa Energy, Evolve Work Studio, 2nd floor, Raj Pinnacle, Plot no. 7F Phase 1 6th Cross, Graphite India Main Rd, Whitefield, Doddanakundi Industrial Area 2, EPIP Zone, Bengaluru, Karnataka 560048\",\n    \"city\":\"Bangalore\",\n    \"contact_number\":1234567890,\n    \"country\":\"India\",\n    \"country_code\":91,\n    \"domain\":\"racanaa.energy\",\n    \"email_id\":\"support@racanaa.com\",\n    \"pin_code\":560048,\n    \"state\":\"Karnataka\",\n    \"type\":\"ROOT\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/accounts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"accounts"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=ISO-8859-1"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 24 Sep 2023 13:29:45 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"b6ee836d-5a6c-4164-b7f4-5c052d073662\",\n    \"timestamp\": \"24-09-2023 01:29:45:235Z UTC\",\n    \"code\": 401,\n    \"status\": \"Unauthorized\",\n    \"message\": \"Invalid API Key\"\n}"
								},
								{
									"name": "Validation error - field required",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"MNEGI\",\n    \"address\": \"Racanaa Energy, Evolve Work Studio, 2nd floor, Raj Pinnacle, Plot no. 7F Phase 1 6th Cross, Graphite India Main Rd, Whitefield, Doddanakundi Industrial Area 2, EPIP Zone, Bengaluru, Karnataka 560048\",\n    \"city\": \"Bangalore\",\n    \n    \"country\": \"India\",\n    \n    \"domain\": \"mneg.i.int\",\n    \"emailId\": \"m@racanaa.com\",\n    \"pinCode\": 560000,\n    \"state\": \"Karnataka\",\n    \"type\": \"CLIENT\",\n    \"tenantId\": \"402881888abea2c2018abea2c5500000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{accounts.service.url}}/accounts",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 24 Sep 2023 13:28:52 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"2d66040e-fa7d-474b-981e-d2e037d42851\",\n    \"timestamp\": \"24-09-2023 01:28:52:770Z UTC\",\n    \"code\": 400,\n    \"status\": \"Bad Request\",\n    \"message\": \"Input validation failed\",\n    \"errors\": [\n        {\n            \"field\": \"countryCode\",\n            \"message\": \"cpountryCode is mandatory\"\n        },\n        {\n            \"field\": \"contactNumber\",\n            \"message\": \"Contact number is required\"\n        }\n    ]\n}"
								},
								{
									"name": "Create account - Invalid JSON",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\n    \"name\": \"MNEGI\",\n    \"address\": \"Racanaa Energy, Evolve Work Studio, 2nd floor, Raj Pinnacle, Plot no. 7F Phase 1 6th Cross, Graphite India Main Rd, Whitefield, Doddanakundi Industrial Area 2, EPIP Zone, Bengaluru, Karnataka 560048\",\n    \"city\": \"Bangalore\",\n    \n    \"country\": \"India\",\n    \n    \"domain\": \"mneg.i.int\",\n    \"emailId\": \"m@racanaa.com\",\n    \"pinCode\": 560000,\n    \"state\": \"Karnataka\",\n    \"type\": \"CLIENT\",\n    \"tenantId\": \"402881888abea2c2018abea2c5500000\"\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{accounts.service.url}}/accounts",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 24 Sep 2023 13:30:29 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"b4fc46d2-8d22-4bfa-8537-626fd83ff926\",\n    \"timestamp\": \"24-09-2023 01:30:29:849Z UTC\",\n    \"code\": 422,\n    \"status\": \"Unprocessable Entity\",\n    \"message\": \"JSON parse error: Cannot construct instance of `com.racanaa.services.account.dto.AccountDto` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('name')\"\n}"
								},
								{
									"name": "Create account - Domain check",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Derwent bb\",\n    \"address\": \"Racanaa Energy, Evolve Work Studio, 2nd floor, Raj Pinnacle, Plot no. 7F Phase 1 6th Cross, Graphite India Main Rd, Whitefield, Doddanakundi Industrial Area 2, EPIP Zone, Bengaluru, Karnataka 560048\",\n    \"city\": \"Bangalore\",\n    \"countryCode\":\"+91\",\n    \"contact\": \"919900900\",\n    \"country\": \"India\",\n    \"domain\": \"mneg.i.int\",\n    \"email\": \"derwent@racanaa.com\",\n    \"pinCode\": 560000,\n    \"state\": \"Karnataka\",\n    \"type\": \"CLIENT\",\n    \"tenantId\": \"402881888abea2c2018abea2c5500000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{accounts.service.url}}/accounts",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 25 Sep 2023 14:54:40 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"8ed4426c-659e-4772-a199-850577d32e19\",\n    \"timestamp\": \"25-09-2023 02:54:40:475Z UTC\",\n    \"code\": 400,\n    \"status\": \"Bad Request\",\n    \"message\": \"An account already exists with domain: mneg.i.int\",\n    \"stackTrace\": \"com.racanaa.services.account.exception.ResourceAlreadyExistException: An account already exists with domain: mneg.i.int\\n\\tat com.racanaa.services.account.service.AccountService.validateAccount(AccountService.java:141)\\n\\tat com.racanaa.services.account.service.AccountService.create(AccountService.java:92)\\n\\tat com.racanaa.services.account.controller.AccountController.create(AccountController.java:143)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\\n\\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)\\n\\tat org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)\\n\\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat com.racanaa.services.account.security.AuthenticationFilter.doFilter(AuthenticationFilter.java:50)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\\n\\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\\n\\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:833)\\n\"\n}"
								},
								{
									"name": "Create account - Name check",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Derwent bb\",\n    \"address\": \"Racanaa Energy, Evolve Work Studio, 2nd floor, Raj Pinnacle, Plot no. 7F Phase 1 6th Cross, Graphite India Main Rd, Whitefield, Doddanakundi Industrial Area 2, EPIP Zone, Bengaluru, Karnataka 560048\",\n    \"city\": \"Bangalore\",\n    \"countryCode\":\"+91\",\n    \"contact\": \"919900900\",\n    \"country\": \"India\",\n    \"domain\": \"mneg.bb.int\",\n    \"email\": \"derwent@racanaa.com\",\n    \"pinCode\": 560000,\n    \"state\": \"Karnataka\",\n    \"type\": \"CLIENT\",\n    \"tenantId\": \"402881888abea2c2018abea2c5500000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{accounts.service.url}}/accounts",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 25 Sep 2023 14:55:51 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"04014e11-46fe-40ec-ad5e-3e706e2d393d\",\n    \"timestamp\": \"25-09-2023 02:55:51:389Z UTC\",\n    \"code\": 400,\n    \"status\": \"Bad Request\",\n    \"message\": \"An account already exists with name: Derwent bb\",\n    \"stackTrace\": \"com.racanaa.services.account.exception.ResourceAlreadyExistException: An account already exists with name: Derwent bb\\n\\tat com.racanaa.services.account.service.AccountService.validateAccount(AccountService.java:135)\\n\\tat com.racanaa.services.account.service.AccountService.create(AccountService.java:92)\\n\\tat com.racanaa.services.account.controller.AccountController.create(AccountController.java:143)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\\n\\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)\\n\\tat org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)\\n\\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat com.racanaa.services.account.security.AuthenticationFilter.doFilter(AuthenticationFilter.java:50)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\\n\\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\\n\\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:833)\\n\"\n}"
								}
							]
						},
						{
							"name": "Get account by id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "6e399983-862e-4435-808a-4056ebc4f841",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{accounts.service.url}}/accounts/402881888ac3ce6b018ac3ce6f840002",
									"host": [
										"{{accounts.service.url}}"
									],
									"path": [
										"accounts",
										"402881888ac3ce6b018ac3ce6f840002"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Get account by id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-api-key",
												"value": "6e399983-862e-4435-808a-4056ebc4f841",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{accounts.service.url}}/accounts/402881888ac3ce6b018ac3ce6f860003",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"402881888ac3ce6b018ac3ce6f860003"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 24 Sep 2023 13:28:10 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"402881888ac3ce6b018ac3ce6f860003\",\n    \"name\": \"Beans Coffee\",\n    \"nameRegistered\": null,\n    \"code\": null,\n    \"type\": \"CLIENT\",\n    \"apiKey\": \"620285e0-835d-49f3-81b7-3c8b270bd7eb\",\n    \"email\": \"support@racanaa.com\",\n    \"emailMasked\": null,\n    \"countryCode\": \"+91\",\n    \"contact\": \"12333312121l\",\n    \"contactMasked\": 0,\n    \"addressLine1\": \"WhiteField\",\n    \"addressLine2\": null,\n    \"city\": null,\n    \"district\": \"Bangalore\",\n    \"state\": \"Karnataka\",\n    \"country\": \"India\",\n    \"pinCode\": \"560078\",\n    \"domain\": null,\n    \"tenantId\": \"402881888ac3ce6b018ac3ce6f840002\",\n    \"createdBy\": null,\n    \"updatedBy\": null,\n    \"dateCreated\": 1695502200715,\n    \"dateUpdated\": 1695502200715\n}"
								},
								{
									"name": "Get account by id - NOT FOUND",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-api-key",
												"value": "6e399983-862e-4435-808a-4056ebc4f841",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{accounts.service.url}}/accounts/ff8080818acbd758018acbea074800001",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"ff8080818acbd758018acbea074800001"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 25 Sep 2023 13:26:12 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"7cfe14e3-1006-4816-a7a9-0798877c69c9\",\n    \"timestamp\": \"25-09-2023 01:26:12:295Z UTC\",\n    \"code\": 404,\n    \"status\": \"Not Found\",\n    \"message\": \"Account not found with id: ff8080818acbd758018acbea074800001\",\n    \"stackTrace\": \"com.racanaa.services.account.exception.DataNotFoundException: Account not found with id: ff8080818acbd758018acbea074800001\\n\\tat com.racanaa.services.account.persistance.manager.AccountManager.lambda$getById$1(AccountManager.java:146)\\n\\tat java.base/java.util.Optional.orElseThrow(Optional.java:403)\\n\\tat com.racanaa.services.account.persistance.manager.AccountManager.getById(AccountManager.java:145)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\\n\\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\\n\\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\\n\\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)\\n\\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\\n\\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)\\n\\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\\n\\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)\\n\\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\\n\\tat com.racanaa.services.account.persistance.manager.AccountManager$$SpringCGLIB$$0.getById(<generated>)\\n\\tat com.racanaa.services.account.service.AccountService.getById(AccountService.java:90)\\n\\tat com.racanaa.services.account.controller.AccountController.getById(AccountController.java:157)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\\n\\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)\\n\\tat org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)\\n\\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat com.racanaa.services.account.security.AuthenticationFilter.doFilter(AuthenticationFilter.java:50)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\\n\\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\\n\\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:833)\\n\"\n}"
								}
							]
						},
						{
							"name": "Update Account",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "{{api.key.name}}",
										"value": "{{api.key.value}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \n    \"email\":\"mani.mani@cprl.com\",\n    \"district\": \"Delhi\",\n    \"domain\":\"asasa12121.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{accounts.service.url}}/accounts/ff8080818ad52c59018ad52d1c8f0000",
									"host": [
										"{{accounts.service.url}}"
									],
									"path": [
										"accounts",
										"ff8080818ad52c59018ad52d1c8f0000"
									]
								}
							},
							"response": [
								{
									"name": "Update Account",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\":\"shiva@racanaa.com\",\n    \"district\": \"Bangalore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{accounts.service.url}}/accounts/ff8080818acbd758018acbea07480000",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"ff8080818acbd758018acbea07480000"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 25 Sep 2023 10:41:00 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"ff8080818acbd758018acbea07480000\",\n    \"name\": \"Shiva\",\n    \"nameRegistered\": null,\n    \"code\": null,\n    \"type\": \"CLIENT\",\n    \"apiKey\": null,\n    \"email\": \"shiva@racanaa.com\",\n    \"emailMasked\": null,\n    \"countryCode\": \"+91\",\n    \"contact\": \"919900900\",\n    \"contactMasked\": 0,\n    \"addressLine1\": null,\n    \"addressLine2\": null,\n    \"city\": \"Bangalore\",\n    \"district\": \"Bangalore\",\n    \"state\": \"Karnataka\",\n    \"country\": \"India\",\n    \"pinCode\": \"560000\",\n    \"domain\": \"mneg.i.int\",\n    \"tenantId\": null,\n    \"createdBy\": null,\n    \"updatedBy\": null,\n    \"dateCreated\": 1695638226766,\n    \"dateUpdated\": 1695638460252\n}"
								},
								{
									"name": "Update Account - NOT FOUND",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\":\"shiva@racanaa.com\",\n    \"district\": \"Bangalore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{accounts.service.url}}/accounts/ff8080818acbd758018acbea07480001",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"ff8080818acbd758018acbea07480001"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 25 Sep 2023 13:25:26 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"d55bfc46-d34e-42c8-a36f-33645d019afe\",\n    \"timestamp\": \"25-09-2023 01:25:26:671Z UTC\",\n    \"code\": 404,\n    \"status\": \"Not Found\",\n    \"message\": \"Account not found with id: ff8080818acbd758018acbea07480001\",\n    \"stackTrace\": \"com.racanaa.services.account.exception.DataNotFoundException: Account not found with id: ff8080818acbd758018acbea07480001\\n\\tat com.racanaa.services.account.persistance.manager.AccountManager.lambda$update$2(AccountManager.java:159)\\n\\tat java.base/java.util.Optional.orElseThrow(Optional.java:403)\\n\\tat com.racanaa.services.account.persistance.manager.AccountManager.update(AccountManager.java:158)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\\n\\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\\n\\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\\n\\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)\\n\\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\\n\\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)\\n\\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\\n\\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)\\n\\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\\n\\tat com.racanaa.services.account.persistance.manager.AccountManager$$SpringCGLIB$$0.update(<generated>)\\n\\tat com.racanaa.services.account.service.AccountService.update(AccountService.java:100)\\n\\tat com.racanaa.services.account.controller.AccountController.updateById(AccountController.java:173)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\\n\\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)\\n\\tat org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)\\n\\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat com.racanaa.services.account.security.AuthenticationFilter.doFilter(AuthenticationFilter.java:50)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\\n\\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\\n\\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:833)\\n\"\n}"
								}
							]
						},
						{
							"name": "Delete Account",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "{{api.key.name}}",
										"value": "{{api.key.value}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":\"Derwent\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{accounts.service.url}}/accounts/402882328acb6ea5018acb6f240e0000",
									"host": [
										"{{accounts.service.url}}"
									],
									"path": [
										"accounts",
										"402882328acb6ea5018acb6f240e0000"
									]
								}
							},
							"response": [
								{
									"name": "Delete Account",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\":\"Derwent\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{accounts.service.url}}/accounts/402882328acb79a6018acb79c9b30000",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"402882328acb79a6018acb79c9b30000"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 25 Sep 2023 08:26:05 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"402882328acb6ea5018acb6f240e0000\",\n    \"name\": \"MNEGI.COM\",\n    \"nameRegistered\": null,\n    \"code\": null,\n    \"type\": null,\n    \"apiKey\": null,\n    \"email\": \"manohar.negi@mnegi.com\",\n    \"emailMasked\": null,\n    \"countryCode\": null,\n    \"contact\": null,\n    \"contactMasked\": 0,\n    \"addressLine1\": null,\n    \"addressLine2\": null,\n    \"city\": null,\n    \"district\": null,\n    \"state\": null,\n    \"country\": null,\n    \"pinCode\": null,\n    \"domain\": null,\n    \"tenantId\": null,\n    \"createdBy\": null,\n    \"updatedBy\": null,\n    \"dateCreated\": 1695630173201,\n    \"dateUpdated\": 1695630191855\n}"
								}
							]
						}
					]
				},
				{
					"name": "2. Preferences",
					"item": [
						{
							"name": "List accounts preferences",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{api.key.name}}",
										"value": "{{api.key.value}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{accounts.service.url}}/accounts/402881888ac3ce6b018ac3ce6f860003/preferences?offset=1&limit=3&sort={\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"}]}",
									"host": [
										"{{accounts.service.url}}"
									],
									"path": [
										"accounts",
										"402881888ac3ce6b018ac3ce6f860003",
										"preferences"
									],
									"query": [
										{
											"key": "offset",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "3"
										},
										{
											"key": "sort",
											"value": "{\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"}]}"
										}
									]
								}
							},
							"response": [
								{
									"name": "List accounts preferences",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{accounts.service.url}}/accounts/402881888ac3ce6b018ac3ce6f860003/preferences?offset=1&limit=3&sort={\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"}]}",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"402881888ac3ce6b018ac3ce6f860003",
												"preferences"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "3"
												},
												{
													"key": "sort",
													"value": "{\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"}]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 26 Sep 2023 19:22:42 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"total\": 3,\n    \"offset\": 1,\n    \"limit\": 3,\n    \"data\": [\n        {\n            \"accountId\": \"402881888ac3ce6b018ac3ce6f860003\",\n            \"name\": \"currency\",\n            \"value\": \"INR\",\n            \"tenantId\": \"402881888ac3ce6b018ac3ce6f730000\",\n            \"createdBy\": null,\n            \"updatedBy\": null,\n            \"dateCreated\": 1695576755489,\n            \"dateUpdated\": 1695576755489\n        },\n        {\n            \"accountId\": \"402881888ac3ce6b018ac3ce6f860003\",\n            \"name\": \"energyUnit\",\n            \"value\": \"KVH\",\n            \"tenantId\": \"402881888ac3ce6b018ac3ce6f730000\",\n            \"createdBy\": null,\n            \"updatedBy\": null,\n            \"dateCreated\": 1695576713919,\n            \"dateUpdated\": 1695576713919\n        },\n        {\n            \"accountId\": \"402881888ac3ce6b018ac3ce6f860003\",\n            \"name\": \"timezone\",\n            \"value\": \"IST\",\n            \"tenantId\": \"402881888ac3ce6b018ac3ce6f730000\",\n            \"createdBy\": null,\n            \"updatedBy\": null,\n            \"dateCreated\": 1695576699248,\n            \"dateUpdated\": 1695576699248\n        }\n    ],\n    \"search\": null,\n    \"sort\": {\n        \"criteria\": [\n            {\n                \"by\": \"name\",\n                \"order\": \"asc\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Create Preference",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "{{api.key.name}}",
										"value": "{{api.key.value}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"distance\",\n    \"value\": \"KM\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{accounts.service.url}}/accounts/402881888ac3ce6b018ac3ce6f860003/preferences",
									"host": [
										"{{accounts.service.url}}"
									],
									"path": [
										"accounts",
										"402881888ac3ce6b018ac3ce6f860003",
										"preferences"
									]
								}
							},
							"response": [
								{
									"name": "Create Preference",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"fuel\",\n    \"value\": \"litre\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{accounts.service.url}}/accounts/402881888ac3ce6b018ac3ce6f860003/preferences",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"402881888ac3ce6b018ac3ce6f860003",
												"preferences"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 26 Sep 2023 20:20:13 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"ff8080818ad323e9018ad3263e0b0000\",\n    \"accountId\": \"402881888ac3ce6b018ac3ce6f860003\",\n    \"name\": \"fuel\",\n    \"value\": \"litre\",\n    \"tenantId\": \"402881888ac3ce6b018ac3ce6f730000\",\n    \"createdBy\": null,\n    \"updatedBy\": null,\n    \"dateCreated\": 1695759613458,\n    \"dateUpdated\": 1695759613458\n}"
								},
								{
									"name": "Create Preference - Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"fuel\",\n    \"value\": \"litre\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{accounts.service.url}}/accounts/402881888ac3ce6b018ac3ce6f860003/preferences",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"402881888ac3ce6b018ac3ce6f860003",
												"preferences"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=ISO-8859-1"
										},
										{
											"key": "Content-Length",
											"value": "166"
										},
										{
											"key": "Date",
											"value": "Tue, 26 Sep 2023 17:20:01 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"cdb1a0bd-be69-4be7-a37f-6490d14ee13b\",\n    \"timestamp\": \"26-09-2023 05:20:01:045Z UTC\",\n    \"code\": 401,\n    \"status\": \"Unauthorized\",\n    \"message\": \"Authorization header not found\"\n}"
								},
								{
									"name": "Create Preference - input validation error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \n    \"value\": \"KM\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{accounts.service.url}}/accounts/402881888ac3ce6b018ac3ce6f860003/preferences",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"402881888ac3ce6b018ac3ce6f860003",
												"preferences"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 26 Sep 2023 20:49:14 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"b796a811-19c1-4969-8a69-b429903b24c4\",\n    \"timestamp\": \"26-09-2023 08:49:14:685Z UTC\",\n    \"code\": 400,\n    \"status\": \"Bad Request\",\n    \"message\": \"Input validation failed\",\n    \"stackTrace\": \"org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [1] in public org.springframework.http.ResponseEntity<com.racanaa.services.account.dto.response.AccountPreferenceResponseDto> com.racanaa.services.account.controller.AccountPreferenceController.create(java.lang.String,com.racanaa.services.account.dto.request.AccountPreferenceRequestDto): [Field error in object 'accountPreferenceRequestDto' on field 'name': rejected value [null]; codes [NotBlank.accountPreferenceRequestDto.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [accountPreferenceRequestDto.name,name]; arguments []; default message [name]]; default message [Name is mandatory]] \\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:144)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat com.racanaa.services.account.security.jwt.TokenAuthenticationFilter.doFilter(TokenAuthenticationFilter.java:38)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat com.racanaa.services.account.security.apikey.ApiKeyAuthenticationFilter.doFilter(ApiKeyAuthenticationFilter.java:38)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\\n\\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\\n\\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:833)\\n\",\n    \"errors\": [\n        {\n            \"field\": \"name\",\n            \"message\": \"Name is mandatory\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Preference by id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{api.key.name}}",
										"value": "{{api.key.value}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{accounts.service.url}}/accounts/402881888ac3ce6b018ac3ce6f860003/preferences/ff8080818ad323e9018ad3263e0b0000",
									"host": [
										"{{accounts.service.url}}"
									],
									"path": [
										"accounts",
										"402881888ac3ce6b018ac3ce6f860003",
										"preferences",
										"ff8080818ad323e9018ad3263e0b0000"
									]
								}
							},
							"response": [
								{
									"name": "Get Preference by id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{accounts.service.url}}/accounts/402881888ac3ce6b018ac3ce6f860003/preferences/ff8080818ad323e9018ad3263e0b0000",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"402881888ac3ce6b018ac3ce6f860003",
												"preferences",
												"ff8080818ad323e9018ad3263e0b0000"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 26 Sep 2023 20:21:54 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"ff8080818ad323e9018ad3263e0b0000\",\n    \"accountId\": \"402881888ac3ce6b018ac3ce6f860003\",\n    \"name\": \"fuel\",\n    \"value\": \"litre\",\n    \"tenantId\": \"402881888ac3ce6b018ac3ce6f730000\",\n    \"createdBy\": null,\n    \"updatedBy\": null,\n    \"dateCreated\": 1695759613458,\n    \"dateUpdated\": 1695759613458\n}"
								},
								{
									"name": "Get Preference by id - preference not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{accounts.service.url}}/accounts/402881888ac3ce6b018ac3ce6f860003/preferences/ff8080818ad323e9018ad3263e0b00001",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"402881888ac3ce6b018ac3ce6f860003",
												"preferences",
												"ff8080818ad323e9018ad3263e0b00001"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 26 Sep 2023 20:22:18 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"3c69e4e8-628a-4285-88b7-733782642c7b\",\n    \"timestamp\": \"26-09-2023 08:22:18:896Z UTC\",\n    \"code\": 404,\n    \"status\": \"Not Found\",\n    \"message\": \"Account preference not found with id: ff8080818ad323e9018ad3263e0b00001\",\n    \"stackTrace\": \"com.racanaa.services.account.exception.DataNotFoundException: Account preference not found with id: ff8080818ad323e9018ad3263e0b00001\\n\\tat com.racanaa.services.account.persistance.manager.AccountPreferenceManager.lambda$getById$0(AccountPreferenceManager.java:56)\\n\\tat java.base/java.util.Optional.orElseThrow(Optional.java:403)\\n\\tat com.racanaa.services.account.persistance.manager.AccountPreferenceManager.getById(AccountPreferenceManager.java:55)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\\n\\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\\n\\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\\n\\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)\\n\\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\\n\\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)\\n\\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\\n\\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)\\n\\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\\n\\tat com.racanaa.services.account.persistance.manager.AccountPreferenceManager$$SpringCGLIB$$0.getById(<generated>)\\n\\tat com.racanaa.services.account.service.AccountPreferenceService.getById(AccountPreferenceService.java:96)\\n\\tat com.racanaa.services.account.controller.AccountPreferenceController.getById(AccountPreferenceController.java:118)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\\n\\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat com.racanaa.services.account.security.jwt.TokenAuthenticationFilter.doFilter(TokenAuthenticationFilter.java:38)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat com.racanaa.services.account.security.apikey.ApiKeyAuthenticationFilter.doFilter(ApiKeyAuthenticationFilter.java:38)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\\n\\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\\n\\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:833)\\n\"\n}"
								},
								{
									"name": "Get Preference by id - account not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{accounts.service.url}}/accounts/402881888ac3ce6b018ac3ce6f860013/preferences/402881888ac83f03018ac8400d200003",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"402881888ac3ce6b018ac3ce6f860013",
												"preferences",
												"402881888ac83f03018ac8400d200003"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 26 Sep 2023 20:22:47 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"b457cbab-6bc6-462a-b2ea-08a1970d91bb\",\n    \"timestamp\": \"26-09-2023 08:22:47:301Z UTC\",\n    \"code\": 404,\n    \"status\": \"Not Found\",\n    \"message\": \"Account not found with id: 402881888ac3ce6b018ac3ce6f860013\",\n    \"stackTrace\": \"com.racanaa.services.account.exception.DataNotFoundException: Account not found with id: 402881888ac3ce6b018ac3ce6f860013\\n\\tat com.racanaa.services.account.persistance.manager.AccountManager.lambda$getById$0(AccountManager.java:76)\\n\\tat java.base/java.util.Optional.orElseThrow(Optional.java:403)\\n\\tat com.racanaa.services.account.persistance.manager.AccountManager.getById(AccountManager.java:75)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\\n\\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\\n\\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\\n\\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)\\n\\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\\n\\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)\\n\\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\\n\\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)\\n\\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\\n\\tat com.racanaa.services.account.persistance.manager.AccountManager$$SpringCGLIB$$0.getById(<generated>)\\n\\tat com.racanaa.services.account.service.AccountPreferenceService.getById(AccountPreferenceService.java:94)\\n\\tat com.racanaa.services.account.controller.AccountPreferenceController.getById(AccountPreferenceController.java:118)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\\n\\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat com.racanaa.services.account.security.jwt.TokenAuthenticationFilter.doFilter(TokenAuthenticationFilter.java:38)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat com.racanaa.services.account.security.apikey.ApiKeyAuthenticationFilter.doFilter(ApiKeyAuthenticationFilter.java:38)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\\n\\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\\n\\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:833)\\n\"\n}"
								}
							]
						},
						{
							"name": "Update Preference",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "{{api.key.name}}",
										"value": "{{api.key.value}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"distance\",\n    \"value\": \"MM\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{accounts.service.url}}/accounts/402881888ac3ce6b018ac3ce6f860003/preferences/ff8080818ad323e9018ad3263e0b0000",
									"host": [
										"{{accounts.service.url}}"
									],
									"path": [
										"accounts",
										"402881888ac3ce6b018ac3ce6f860003",
										"preferences",
										"ff8080818ad323e9018ad3263e0b0000"
									]
								}
							},
							"response": [
								{
									"name": "Update Preference",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"distance\",\n    \"value\": \"MM\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{accounts.service.url}}/accounts/402881888ac3ce6b018ac3ce6f860003/preferences/ff8080818ad323e9018ad3263e0b0000",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"402881888ac3ce6b018ac3ce6f860003",
												"preferences",
												"ff8080818ad323e9018ad3263e0b0000"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 26 Sep 2023 20:55:18 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"ff8080818ad33f62018ad3465d9e0002\",\n    \"accountId\": null,\n    \"name\": \"distance\",\n    \"value\": \"MM\",\n    \"tenantId\": null,\n    \"createdBy\": null,\n    \"updatedBy\": null,\n    \"dateCreated\": 1695761718687,\n    \"dateUpdated\": 1695761718687\n}"
								}
							]
						},
						{
							"name": "Update Preference Copy",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "{{api.key.name}}",
										"value": "{{api.key.value}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{accounts.service.url}}/accounts/402881888ac3ce6b018ac3ce6f860003/preferences/ff8080818ad323e9018ad3263e0b0000",
									"host": [
										"{{accounts.service.url}}"
									],
									"path": [
										"accounts",
										"402881888ac3ce6b018ac3ce6f860003",
										"preferences",
										"ff8080818ad323e9018ad3263e0b0000"
									]
								}
							},
							"response": [
								{
									"name": "Delete Preference",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{accounts.service.url}}/accounts/402881888ac3ce6b018ac3ce6f860003/preferences/ff8080818ad323e9018ad3263e0b0000",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"402881888ac3ce6b018ac3ce6f860003",
												"preferences",
												"ff8080818ad323e9018ad3263e0b0000"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 26 Sep 2023 20:59:17 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"ff8080818ad323e9018ad3263e0b0000\",\n    \"accountId\": \"402881888ac3ce6b018ac3ce6f860003\",\n    \"name\": \"distance\",\n    \"value\": \"MM\",\n    \"tenantId\": \"402881888ac3ce6b018ac3ce6f730000\",\n    \"createdBy\": null,\n    \"updatedBy\": null,\n    \"dateCreated\": 1695759613458,\n    \"dateUpdated\": 1695761718693\n}"
								},
								{
									"name": "Delete preference - not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{accounts.service.url}}/accounts/402881888ac3ce6b018ac3ce6f860003/preferences/ff8080818ad323e9018ad3263e0b0000",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"accounts",
												"402881888ac3ce6b018ac3ce6f860003",
												"preferences",
												"ff8080818ad323e9018ad3263e0b0000"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 26 Sep 2023 21:00:53 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"d954251d-9806-40db-ad13-08407b6ba671\",\n    \"timestamp\": \"26-09-2023 09:00:53:576Z UTC\",\n    \"code\": 404,\n    \"status\": \"Not Found\",\n    \"message\": \"Account preference not found with id: ff8080818ad323e9018ad3263e0b0000\",\n    \"stackTrace\": \"com.racanaa.services.account.exception.DataNotFoundException: Account preference not found with id: ff8080818ad323e9018ad3263e0b0000\\n\\tat com.racanaa.services.account.persistance.manager.AccountPreferenceManager.lambda$deleteById$2(AccountPreferenceManager.java:83)\\n\\tat java.base/java.util.Optional.orElseThrow(Optional.java:403)\\n\\tat com.racanaa.services.account.persistance.manager.AccountPreferenceManager.deleteById(AccountPreferenceManager.java:82)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\\n\\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\\n\\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\\n\\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)\\n\\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\\n\\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)\\n\\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\\n\\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)\\n\\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\\n\\tat com.racanaa.services.account.persistance.manager.AccountPreferenceManager$$SpringCGLIB$$0.deleteById(<generated>)\\n\\tat com.racanaa.services.account.service.AccountPreferenceService.deleteById(AccountPreferenceService.java:122)\\n\\tat com.racanaa.services.account.controller.AccountPreferenceController.deleteById(AccountPreferenceController.java:166)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\\n\\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat com.racanaa.services.account.security.jwt.TokenAuthenticationFilter.doFilter(TokenAuthenticationFilter.java:38)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat com.racanaa.services.account.security.apikey.ApiKeyAuthenticationFilter.doFilter(ApiKeyAuthenticationFilter.java:38)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\\n\\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\\n\\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:833)\\n\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "2. Preferences",
					"item": [
						{
							"name": "List user preferences",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": [
								{
									"name": "Empty list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{accounts.service.url}}/users/402881888ac3ce6b018ac3ce6ffd000b/preferences?offset=1&limit=3&sort={\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"}]}",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"users",
												"402881888ac3ce6b018ac3ce6ffd000b",
												"preferences"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "3"
												},
												{
													"key": "sort",
													"value": "{\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"}]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 27 Sep 2023 13:01:30 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"total\": 0,\n    \"offset\": 1,\n    \"limit\": 3,\n    \"data\": [],\n    \"search\": null,\n    \"sort\": {\n        \"criteria\": [\n            {\n                \"by\": \"name\",\n                \"order\": \"asc\"\n            }\n        ]\n    }\n}"
								},
								{
									"name": "List user preferences",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{accounts.service.url}}/users/402881888ac3ce6b018ac3ce6ffd000b/preferences?offset=1&limit=3&sort={\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"}]}",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"users",
												"402881888ac3ce6b018ac3ce6ffd000b",
												"preferences"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "3"
												},
												{
													"key": "sort",
													"value": "{\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"}]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 27 Sep 2023 13:14:14 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"total\": 1,\n    \"offset\": 1,\n    \"limit\": 3,\n    \"data\": [\n        {\n            \"userId\": \"402881888ac3ce6b018ac3ce6ffd000b\",\n            \"name\": \"distance\",\n            \"value\": \"kms\",\n            \"id\": \"ff8080818ad6c59f018ad6c66fb80000\",\n            \"tenantId\": \"402881888ac3ce6b018ac3ce6f730000\",\n            \"createdBy\": null,\n            \"updatedBy\": null,\n            \"dateCreated\": 1695820443583,\n            \"dateUpdated\": 1695820443583\n        }\n    ],\n    \"search\": null,\n    \"sort\": {\n        \"criteria\": [\n            {\n                \"by\": \"name\",\n                \"order\": \"asc\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Get user preference by id",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": [
								{
									"name": "Empty list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{accounts.service.url}}/users/402881888ac3ce6b018ac3ce6ffd000b/preferences?offset=1&limit=3&sort={\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"}]}",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"users",
												"402881888ac3ce6b018ac3ce6ffd000b",
												"preferences"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "3"
												},
												{
													"key": "sort",
													"value": "{\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"}]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 27 Sep 2023 13:01:30 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"total\": 0,\n    \"offset\": 1,\n    \"limit\": 3,\n    \"data\": [],\n    \"search\": null,\n    \"sort\": {\n        \"criteria\": [\n            {\n                \"by\": \"name\",\n                \"order\": \"asc\"\n            }\n        ]\n    }\n}"
								},
								{
									"name": "List user preferences",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{accounts.service.url}}/users/402881888ac3ce6b018ac3ce6ffd000b/preferences?offset=1&limit=3&sort={\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"}]}",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"users",
												"402881888ac3ce6b018ac3ce6ffd000b",
												"preferences"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "3"
												},
												{
													"key": "sort",
													"value": "{\"criteria\":[{\"by\":\"name\",\"order\":\"asc\"}]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 27 Sep 2023 13:14:14 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"total\": 1,\n    \"offset\": 1,\n    \"limit\": 3,\n    \"data\": [\n        {\n            \"userId\": \"402881888ac3ce6b018ac3ce6ffd000b\",\n            \"name\": \"distance\",\n            \"value\": \"kms\",\n            \"id\": \"ff8080818ad6c59f018ad6c66fb80000\",\n            \"tenantId\": \"402881888ac3ce6b018ac3ce6f730000\",\n            \"createdBy\": null,\n            \"updatedBy\": null,\n            \"dateCreated\": 1695820443583,\n            \"dateUpdated\": 1695820443583\n        }\n    ],\n    \"search\": null,\n    \"sort\": {\n        \"criteria\": [\n            {\n                \"by\": \"name\",\n                \"order\": \"asc\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Cretae user preference",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "{{api.key.name}}",
										"value": "{{api.key.value}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \n    \"value\":\"kms\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{accounts.service.url}}/users/402881888ac3ce6b018ac3ce6ffd000b/preferences",
									"host": [
										"{{accounts.service.url}}"
									],
									"path": [
										"users",
										"402881888ac3ce6b018ac3ce6ffd000b",
										"preferences"
									]
								}
							},
							"response": [
								{
									"name": "Cretae user preference - input failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \n    \"value\":\"kms\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{accounts.service.url}}/users/402881888ac3ce6b018ac3ce6ffd000b/preferences",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"users",
												"402881888ac3ce6b018ac3ce6ffd000b",
												"preferences"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 27 Sep 2023 13:13:33 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"18267e96-3b65-4c54-8859-c869d32ff941\",\n    \"timestamp\": \"27-09-2023 01:13:33:859Z UTC\",\n    \"code\": 400,\n    \"status\": \"Bad Request\",\n    \"message\": \"Input validation failed\",\n    \"stackTrace\": \"org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [1] in public org.springframework.http.ResponseEntity<com.racanaa.services.account.dto.UserPreferenceDto> com.racanaa.services.account.controller.UserPreferenceController.create(java.lang.String,com.racanaa.services.account.dto.UserPreferenceDto): [Field error in object 'userPreferenceDto' on field 'name': rejected value [null]; codes [NotBlank.userPreferenceDto.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [userPreferenceDto.name,name]; arguments []; default message [name]]; default message [Name is mandatory]] \\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:144)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat com.racanaa.services.account.security.jwt.TokenAuthenticationFilter.doFilter(TokenAuthenticationFilter.java:38)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat com.racanaa.services.account.security.apikey.ApiKeyAuthenticationFilter.doFilter(ApiKeyAuthenticationFilter.java:38)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\\n\\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)\\n\\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\\n\\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.base/java.lang.Thread.run(Thread.java:833)\\n\",\n    \"errors\": [\n        {\n            \"field\": \"name\",\n            \"message\": \"Name is mandatory\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get by id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{api.key.name}}",
										"value": "{{api.key.value}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{accounts.service.url}}/users/402881888ac3ce6b018ac3ce6ffd000b/preferences/ff8080818ad6c59f018ad6c66fb80000",
									"host": [
										"{{accounts.service.url}}"
									],
									"path": [
										"users",
										"402881888ac3ce6b018ac3ce6ffd000b",
										"preferences",
										"ff8080818ad6c59f018ad6c66fb80000"
									]
								}
							},
							"response": [
								{
									"name": "Get by Id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{accounts.service.url}}/users/402881888ac3ce6b018ac3ce6ffd000b/preferences/ff8080818ad6c59f018ad6c66fb80000",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"users",
												"402881888ac3ce6b018ac3ce6ffd000b",
												"preferences",
												"ff8080818ad6c59f018ad6c66fb80000"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 27 Sep 2023 13:32:42 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"userId\": \"402881888ac3ce6b018ac3ce6ffd000b\",\n    \"name\": \"distance\",\n    \"value\": \"kms\",\n    \"id\": \"ff8080818ad6c59f018ad6c66fb80000\",\n    \"tenantId\": \"402881888ac3ce6b018ac3ce6f730000\",\n    \"createdBy\": null,\n    \"updatedBy\": null,\n    \"dateCreated\": 1695820443583,\n    \"dateUpdated\": 1695820443583\n}"
								}
							]
						},
						{
							"name": "Update by Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{api.key.name}}",
										"value": "{{api.key.value}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{accounts.service.url}}/users/402881888ac3ce6b018ac3ce6ffd000b/preferences/ff8080818ad6c59f018ad6c66fb80000",
									"host": [
										"{{accounts.service.url}}"
									],
									"path": [
										"users",
										"402881888ac3ce6b018ac3ce6ffd000b",
										"preferences",
										"ff8080818ad6c59f018ad6c66fb80000"
									]
								}
							},
							"response": [
								{
									"name": "Get by Id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "{{api.key.name}}",
												"value": "{{api.key.value}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{accounts.service.url}}/users/402881888ac3ce6b018ac3ce6ffd000b/preferences/ff8080818ad6c59f018ad6c66fb80000",
											"host": [
												"{{accounts.service.url}}"
											],
											"path": [
												"users",
												"402881888ac3ce6b018ac3ce6ffd000b",
												"preferences",
												"ff8080818ad6c59f018ad6c66fb80000"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 27 Sep 2023 13:32:42 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"userId\": \"402881888ac3ce6b018ac3ce6ffd000b\",\n    \"name\": \"distance\",\n    \"value\": \"kms\",\n    \"id\": \"ff8080818ad6c59f018ad6c66fb80000\",\n    \"tenantId\": \"402881888ac3ce6b018ac3ce6f730000\",\n    \"createdBy\": null,\n    \"updatedBy\": null,\n    \"dateCreated\": 1695820443583,\n    \"dateUpdated\": 1695820443583\n}"
								}
							]
						}
					]
				},
				{
					"name": "1. User",
					"item": [
						{
							"name": "List users",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{api.key.name}}",
										"value": "{{api.key.value}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI0MDI4ODE4ODhhYzNjZTZiMDE4YWMzY2U2ZjgxMDAwMSIsInJvbGVzIjoidXNlciIsImlhdCI6MTY5NTcwMjg5MSwiZXhwIjoxNjk1NzA2NDkxfQ.BsBrRRcXstyGkj1307koISZ7Csl2OwThW8avWvdzoOQ",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{accounts.service.url}}/users?offset=1&limit=4",
									"host": [
										"{{accounts.service.url}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "offset",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create user",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "{{api.key.name}}",
										"value": "{{api.key.value}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \n    \"email\": \"manii@n.com\",\n    \"password\":\"abcdaaaa\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{accounts.service.url}}/users",
									"host": [
										"{{accounts.service.url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get user by id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "{{api.key.name}}",
										"value": "{{api.key.value}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{accounts.service.url}}/users/ff8080818acfd063018acfd2b06e0000",
									"host": [
										"{{accounts.service.url}}"
									],
									"path": [
										"users",
										"ff8080818acfd063018acfd2b06e0000"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "System Config",
			"item": [
				{
					"name": "List system-config",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/system-config?offset=1&limit=4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"system-config"
							],
							"query": [
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create system-config",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "{{api.key.name}}",
								"value": "{{api.key.value}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"service\",\n    \"value\":\"account service\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{accounts.service.url}}/system-config",
							"host": [
								"{{accounts.service.url}}"
							],
							"path": [
								"system-config"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get system-config by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/accounts/402881888a8db0cf018a8db0f3a80000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"accounts",
								"402881888a8db0cf018a8db0f3a80000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Health",
			"item": [
				{
					"name": "http://localhost:8080/health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Swagger",
			"item": [
				{
					"name": "Swagger Index Page",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "{{api.key.name}}",
								"value": "{{api.key.value}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:8080/swagger-ui/index.html",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"swagger-ui",
								"index.html"
							]
						}
					},
					"response": []
				},
				{
					"name": "Swagger JSON file",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v3/api-docs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v3",
								"api-docs"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}